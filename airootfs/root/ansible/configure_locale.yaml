# Copyright (c) 2024, 2025 acrion innovations GmbH
# Authors: Stefan Zipproth, s.zipproth@acrion.ch
#
# This file is part of Ditana Installer, see
# https://github.com/acrion/ditana-installer and https://ditana.org/installer.
#
# Ditana Installer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Ditana Installer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Ditana Installer. If not, see <https://www.gnu.org/licenses/>.

---
- hosts: localhost
  connection: local
  tasks:
  - name: Activate a specific locale
    lineinfile:
      path: /mnt/etc/locale.gen
      regexp: '^\s*#\s*{{ locale }}.UTF-8\s+UTF-8'
      line: '{{ locale }}.UTF-8 UTF-8'
    register: locale_activation

  - name: Fail if the locale does not exist in /mnt/etc/locale.gen
    fail:
      msg: "Error: {{ locale }}.UTF-8 UTF-8 does not exist in /mnt/etc/locale.gen"
    when: not locale_activation.changed

  - name: Set locale configuration
    copy:
      dest: /mnt/etc/locale.conf
      content: |
        # This configuration explicitly sets the LC_COLLATE, LC_CTYPE, LC_NUMERIC, and LC_MESSAGES
        # environment variables to C.UTF-8 if the use_c_utf8 flag is 'y', regardless of the user-defined
        # locale setting. This approach ensures uniform behavior across various C and C++ library functions.
        # This avoids discrepancies that can arise from differing regional settings.
        #
        # - Setting LC_COLLATE to C.UTF-8 ensures consistent sorting order across different languages.
        #   Affected C functions include strcoll and wcscoll.
        #
        # - LC_CTYPE set to C.UTF-8 guarantees consistent character classification and conversion, which is
        #   crucial for string manipulation and text processing. Affected C functions include isalpha, isdigit,
        #   isspace, toupper, and tolower.
        #
        # - LC_NUMERIC set to C.UTF-8 ensures numerical data is consistently formatted and parsed, for example,
        #   no thousands separator as in en_US.UTF-8 and period (.) as the decimal separator.
        #   Affected C functions include atof, strtod, printf, and scanf.
        #
        # - LC_MESSAGES set to C.UTF-8 provides consistent system messages in English, making it easier for
        #   developers to search for solutions to errors online.
        #
        # If use_c_utf8 is not 'y', the user's locale settings will be used, providing a fully localized experience.
        LANG={{ locale }}.UTF-8
        LC_ADDRESS={{ locale }}.UTF-8
        LC_COLLATE={{ 'C' if use_c_utf8 == 'y' else locale }}.UTF-8
        LC_CTYPE={{ 'C' if use_c_utf8 == 'y' else locale }}.UTF-8
        LC_IDENTIFICATION={{ locale }}.UTF-8
        LC_MEASUREMENT={{ locale }}.UTF-8
        LC_MESSAGES={{ 'C' if use_c_utf8 == 'y' else locale }}.UTF-8
        LC_MONETARY={{ locale }}.UTF-8
        LC_NAME={{ locale }}.UTF-8
        LC_NUMERIC={{ 'C' if use_c_utf8 == 'y' else locale }}.UTF-8
        LC_PAPER={{ locale }}.UTF-8
        LC_TELEPHONE={{ locale }}.UTF-8
        LC_TIME={{ locale }}.UTF-8
      owner: root
      group: root
      mode: '0644'

  - name: Always activate en_US locale in addition to user locale
    lineinfile:
      path: /mnt/etc/locale.gen
      regexp: '^\s*#\s*en_US.UTF-8\s+UTF-8'
      line: 'en_US.UTF-8 UTF-8'
    when: locale != 'en_US'
