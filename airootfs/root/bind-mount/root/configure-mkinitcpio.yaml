# Copyright (c) 2024, 2025 acrion innovations GmbH
# Authors: Stefan Zipproth, s.zipproth@acrion.ch
#
# This file is part of Ditana Installer, see
# https://github.com/acrion/ditana-installer and https://ditana.org/installer.
#
# Ditana Installer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Ditana Installer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Ditana Installer. If not, see <https://www.gnu.org/licenses/>.

---
# Modify /etc/mkinitcpio.conf with respect to the init system, possible encryption of the root partition,
# and filesystem configuration (e.g., ZFS)
# https://wiki.archlinux.org/title/Dm-crypt/Encrypting_an_entire_system#Configuring_mkinitcpio
# https://wiki.archlinux.org/title/Install_Arch_Linux_on_ZFS#Install_and_configure_Arch_Linux

- hosts: localhost
  connection: local
  tasks:

# Fail if expected hooks are not in the /etc/mkinitcpio.conf
    - name: Check if "udev" or "systemd" is in mkinitcpio HOOKS
      command: grep -E "^HOOKS=.*\b(udev|systemd)\b" /etc/mkinitcpio.conf
      register: udev_systemd_check
      failed_when: udev_systemd_check.rc != 0
      changed_when: false

    - name: Check if "kms" is in mkinitcpio HOOKS
      command: grep "^HOOKS=.*\bkms\b" /etc/mkinitcpio.conf
      register: kms_check
      failed_when: kms_check.rc != 0
      changed_when: false

    - name: Check if "filesystems" is in mkinitcpio HOOKS
      command: grep "^HOOKS=.*\bfilesystems\b" /etc/mkinitcpio.conf
      register: filesystems_check
      failed_when: filesystems_check.rc != 0
      changed_when: false

# Set registers to see if hooks are already there, or not.
    - name: Check if "udev" is in mkinitcpio HOOKS
      command: grep "^HOOKS=.*\budev\b" /etc/mkinitcpio.conf
      register: udev_check
      failed_when: udev_check.rc > 1
      changed_when: false

    - name: Check if "systemd" is in mkinitcpio HOOKS
      command: grep "^HOOKS=.*\bsystemd\b" /etc/mkinitcpio.conf
      register: systemd_check
      failed_when: systemd_check.rc > 1
      changed_when: false

    - name: Check if "keyboard" is in mkinitcpio HOOKS
      command: grep "^HOOKS=.*\bkeyboard\b" /etc/mkinitcpio.conf
      register: keyboard_check
      failed_when: keyboard_check.rc > 1
      changed_when: false

    - name: Check if "keymap" is in mkinitcpio HOOKS
      command: grep "^HOOKS=.*\bkeymap\b" /etc/mkinitcpio.conf
      register: keymap_check
      failed_when: keymap_check.rc > 1
      changed_when: false

    - name: Check if "consolefont" is in mkinitcpio HOOKS
      command: grep "^HOOKS=.*\bconsolefont\b" /etc/mkinitcpio.conf
      register: consolefont_check
      failed_when: consolefont_check.rc > 1
      changed_when: false

    - name: Check if "encrypt" is in mkinitcpio HOOKS
      command: grep "^HOOKS=.*\bencrypt\b" /etc/mkinitcpio.conf
      register: encrypt_check
      failed_when: encrypt_check.rc > 1
      changed_when: false

    - name: Check if "sd-vconsole" is in mkinitcpio HOOKS
      command: grep "^HOOKS=.*\bsd-vconsole\b" /etc/mkinitcpio.conf
      register: sd_vconsole_check
      failed_when: sd_vconsole_check.rc > 1
      changed_when: false

    - name: Check if "sd-encrypt" is in mkinitcpio HOOKS
      command: grep "^HOOKS=.*\bsd-encrypt\b" /etc/mkinitcpio.conf
      register: sd_encrypt_check
      failed_when: sd_encrypt_check.rc > 1
      changed_when: false

    - name: Check if "zfs" is in mkinitcpio HOOKS
      command: grep "^HOOKS=.*\bzfs\b" /etc/mkinitcpio.conf
      register: zfs_hook_check
      failed_when: false
      changed_when: false

    - name: Check if "zfs" is in mkinitcpio MODULES
      command: grep "^MODULES=.*\bzfs\b" /etc/mkinitcpio.conf
      register: zfs_module_check
      failed_when: false
      changed_when: false

    - name: Check if "fsck" is in mkinitcpio HOOKS
      command: grep "^HOOKS=.*\bfsck\b" /etc/mkinitcpio.conf
      register: fsck_check
      failed_when: false
      changed_when: false

# Handle zfs based on the zfs_filesystem variable

    - name: Insert "zfs" into HOOKS before "filesystems" if filesystem is zfs
      replace:
        path: /etc/mkinitcpio.conf
        regexp: '^(HOOKS=.*\b)filesystems(\b.*)$'
        replace: '\1zfs filesystems\2'
      when:
        - zfs_filesystem == "y"
        - zfs_hook_check.rc != 0

    - name: Add "zfs" to MODULES if filesystem is zfs
      replace:
        path: /etc/mkinitcpio.conf
        regexp: '^(MODULES=\()(.*?)(\))$'
        replace: '\1\2 zfs\3'
      when:
        - zfs_filesystem == "y"
        - zfs_module_check.rc != 0

    - name: Remove "fsck" from HOOKS if filesystem is zfs
      replace:
        path: /etc/mkinitcpio.conf
        regexp: '\bfsck\b'
        replace: ''
      when:
        - zfs_filesystem == "y"
        - fsck_check.rc == 0

    - name: Print register values
      debug:
        msg:
          - "encrypt_root_partition: {{ encrypt_root_partition }}"
          - "use_init_systemd:       {{ use_init_systemd }}"
          - "zfs_filesystem:         {{ zfs_filesystem }}"
          - "udev_systemd_check:     {{ udev_systemd_check }}"
          - "kms_check:              {{ kms_check }}"
          - "filesystems_check:      {{ filesystems_check }}"
          - "udev_check:             {{ udev_check }}"
          - "systemd_check:          {{ systemd_check }}"
          - "keyboard_check:         {{ keyboard_check }}"
          - "keymap_check:           {{ keymap_check }}"
          - "consolefont_check:      {{ consolefont_check }}"
          - "encrypt_check:          {{ encrypt_check }}"
          - "sd_vconsole_check:      {{ sd_vconsole_check }}"
          - "sd_encrypt_check:       {{ sd_encrypt_check }}"
          - "zfs_hook_check:         {{ zfs_hook_check }}"
          - "zfs_module_check:       {{ zfs_module_check }}"
          - "fsck_check:             {{ fsck_check }}"

# These hooks need to be added independent from the init system
    - name: For LUKS encryption on all init systems, add keyboard hook after kms hook
      replace:
        path: /etc/mkinitcpio.conf
        regexp: '\bkms\b'
        replace: 'kms keyboard'
      when:
        - encrypt_root_partition == "y"
        - zfs_filesystem != "y"
        - keyboard_check.rc != 0
    
    - name: For NVIDIA drivers, except Nouveau, remove the kms hook
      replace:
        path: /etc/mkinitcpio.conf
        regexp: '\bkms\b'
        replace: ''
      when:
        - kms_check.rc == 0
        - nvidia_but_no_nouveau == "y"

# Modify hooks in case of BusyBox init system
    - name: For a BusyBox init system, replace systemd with udev hook
      replace:
        path: /etc/mkinitcpio.conf
        regexp: '\bsystemd\b'
        replace: 'udev'
      when:
        - use_init_systemd != "y"
        - systemd_check.rc == 0

    - name: For LUKS or ZFS encryption on BusyBox init system, add keymap hook after keyboard hook
      replace:
        path: /etc/mkinitcpio.conf
        regexp: '\bkeyboard\b'
        replace: 'keyboard keymap'
      when:
        - encrypt_root_partition == "y"
        - use_init_systemd != "y"
        - keymap_check.rc != 0

    - name: For LUKS encryption on BusyBox init system, add consolefont hook after keymap hook
      replace:
        path: /etc/mkinitcpio.conf
        regexp: '\bkeymap\b'
        replace: 'keymap consolefont'
      when:
        - encrypt_root_partition == "y"
        - zfs_filesystem != "y"
        - use_init_systemd != "y"
        - consolefont_check.rc != 0

    - name: For LUKS encryption on BusyBox init systems, add encrypt hook before filesystems hook
      replace:
        path: /etc/mkinitcpio.conf
        regexp: '\bfilesystems\b'
        replace: 'encrypt filesystems'
      when:
        - encrypt_root_partition == "y"
        - zfs_filesystem != "y"
        - use_init_systemd != "y"
        - encrypt_check.rc != 0

# Modify hooks in case of systemd init system
    - name: For a systemd init system, replace udev hook with systemd
      replace:
        path: /etc/mkinitcpio.conf
        regexp: '\budev\b'
        replace: 'systemd'
      when:
        - use_init_systemd == "y"
        - udev_check.rc == 0
        - systemd_check.rc != 0

    - name: For a systemd init system, remove the keymap hook unless it is encrypted ZFS
      replace:
        path: /etc/mkinitcpio.conf
        regexp: '\bkeymap\b'
        replace: ''
      when:
        - use_init_systemd == "y"
        - not (encrypt_root_partition == "y" and zfs_filesystem == "y")
        - keymap_check is defined and keymap_check.rc == 0

    - name: For a systemd init system, remove consolefont hook
      replace:
        path: /etc/mkinitcpio.conf
        regexp: '\bconsolefont\b'
        replace: ''
      when:
        - use_init_systemd == "y"
        - consolefont_check.rc == 0

    - name: For LUKS encryption on systemd init system, add sd-vconsole hook after keyboard hook
      replace:
        path: /etc/mkinitcpio.conf
        regexp: '\bkeyboard\b'
        replace: 'keyboard sd-vconsole'
      when:
        - encrypt_root_partition == "y"
        - zfs_filesystem != "y"
        - use_init_systemd == "y"
        - sd_vconsole_check.rc != 0

    - name: For LUKS encryption on systemd init system, add sd-encrypt hook before filesystems hook
      replace:
        path: /etc/mkinitcpio.conf
        regexp: '\bfilesystems\b'
        replace: 'sd-encrypt filesystems'
      when:
        - encrypt_root_partition == "y"
        - zfs_filesystem != "y"
        - use_init_systemd == "y"
        - sd_encrypt_check.rc != 0
